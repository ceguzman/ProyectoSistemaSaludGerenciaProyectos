package co.edu.poli.salud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClinicHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClinicHistoryAllPropertiesEquals(ClinicHistory expected, ClinicHistory actual) {
        assertClinicHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertClinicHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClinicHistoryAllUpdatablePropertiesEquals(ClinicHistory expected, ClinicHistory actual) {
        assertClinicHistoryUpdatableFieldsEquals(expected, actual);
        assertClinicHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClinicHistoryAutoGeneratedPropertiesEquals(ClinicHistory expected, ClinicHistory actual) {
        assertThat(expected)
            .as("Verify ClinicHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClinicHistoryUpdatableFieldsEquals(ClinicHistory expected, ClinicHistory actual) {
        assertThat(expected)
            .as("Verify ClinicHistory relevant properties")
            .satisfies(e -> assertThat(e.getDateClinic()).as("check dateClinic").isEqualTo(actual.getDateClinic()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClinicHistoryUpdatableRelationshipsEquals(ClinicHistory expected, ClinicHistory actual) {
        assertThat(expected)
            .as("Verify ClinicHistory relationships")
            .satisfies(e -> assertThat(e.getTypeDisease()).as("check typeDisease").isEqualTo(actual.getTypeDisease()))
            .satisfies(e -> assertThat(e.getPeople()).as("check people").isEqualTo(actual.getPeople()));
    }
}
