package co.edu.poli.salud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicalAppointmentsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalAppointmentsAllPropertiesEquals(MedicalAppointments expected, MedicalAppointments actual) {
        assertMedicalAppointmentsAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicalAppointmentsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalAppointmentsAllUpdatablePropertiesEquals(MedicalAppointments expected, MedicalAppointments actual) {
        assertMedicalAppointmentsUpdatableFieldsEquals(expected, actual);
        assertMedicalAppointmentsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalAppointmentsAutoGeneratedPropertiesEquals(MedicalAppointments expected, MedicalAppointments actual) {
        assertThat(expected)
            .as("Verify MedicalAppointments auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalAppointmentsUpdatableFieldsEquals(MedicalAppointments expected, MedicalAppointments actual) {
        assertThat(expected)
            .as("Verify MedicalAppointments relevant properties")
            .satisfies(e -> assertThat(e.getDateMedical()).as("check dateMedical").isEqualTo(actual.getDateMedical()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicalAppointmentsUpdatableRelationshipsEquals(MedicalAppointments expected, MedicalAppointments actual) {
        assertThat(expected)
            .as("Verify MedicalAppointments relationships")
            .satisfies(e -> assertThat(e.getTypeSpecialist()).as("check typeSpecialist").isEqualTo(actual.getTypeSpecialist()));
    }
}
